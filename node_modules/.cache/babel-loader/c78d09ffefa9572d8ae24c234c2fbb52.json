{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Noah Berkowitz\\\\Downloads\\\\react-arcgis-map-examples\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Noah Berkowitz\\\\Downloads\\\\react-arcgis-map-examples\\\\src\\\\maps\\\\Editor.js\";\n\nimport React, { useEffect, useRef } from \"react\";\nimport { loadModules } from \"esri-loader\";\nexport var Editor = function Editor() {\n  var mapRef = useRef();\n  useEffect(function () {\n    // lazy load the required ArcGIS API for JavaScript modules and CSS\n    loadModules([\"esri/WebMap\", \"esri/views/MapView\", \"esri/widgets/Editor\"], {\n      css: true\n    }).then(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 3),\n          WebMap = _ref2[0],\n          MapView = _ref2[1],\n          Editor = _ref2[2];\n\n      // Create a map from the referenced webmap item id\n      var webmap = new WebMap({\n        portalItem: {\n          id: \"cf05564a3c4149b09f836329929f7fa0\"\n        }\n      });\n      var view = new MapView({\n        container: mapRef.current,\n        map: webmap\n      });\n      view.when(function () {\n        view.popup.autoOpenEnabled = true; //disable popups\n        // Create the Editor\n\n        var editor = new Editor({\n          view: view\n        }); // Add widget to top-right of the view\n\n        view.ui.add(editor, \"top-right\");\n      });\n      return function () {\n        if (view) {\n          // destroy the map view\n          view.container = null;\n        }\n      };\n    });\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"webmap\",\n    ref: mapRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"div\", {\n    id: \"editorDiv\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 47\n    }\n  }));\n};","map":{"version":3,"sources":["C:/Users/Noah Berkowitz/Downloads/react-arcgis-map-examples/src/maps/Editor.js"],"names":["React","useEffect","useRef","loadModules","Editor","mapRef","css","then","WebMap","MapView","webmap","portalItem","id","view","container","current","map","when","popup","autoOpenEnabled","editor","ui","add"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAC1B,MAAMC,MAAM,GAAGH,MAAM,EAArB;AAEAD,EAAAA,SAAS,CAAC,YAAM;AACd;AACAE,IAAAA,WAAW,CAAC,CAAC,aAAD,EAAgB,oBAAhB,EAAsC,qBAAtC,CAAD,EAA+D;AACxEG,MAAAA,GAAG,EAAE;AADmE,KAA/D,CAAX,CAEGC,IAFH,CAEQ,gBAA+B;AAAA;AAAA,UAA7BC,MAA6B;AAAA,UAArBC,OAAqB;AAAA,UAAZL,MAAY;;AACrC;AACA,UAAIM,MAAM,GAAG,IAAIF,MAAJ,CAAW;AACtBG,QAAAA,UAAU,EAAE;AACVC,UAAAA,EAAE,EAAE;AADM;AADU,OAAX,CAAb;AAMA,UAAIC,IAAI,GAAG,IAAIJ,OAAJ,CAAY;AACrBK,QAAAA,SAAS,EAAET,MAAM,CAACU,OADG;AAErBC,QAAAA,GAAG,EAAEN;AAFgB,OAAZ,CAAX;AAKAG,MAAAA,IAAI,CAACI,IAAL,CAAU,YAAW;AACnBJ,QAAAA,IAAI,CAACK,KAAL,CAAWC,eAAX,GAA6B,IAA7B,CADmB,CACgB;AAEnC;;AACA,YAAIC,MAAM,GAAG,IAAIhB,MAAJ,CAAW;AACtBS,UAAAA,IAAI,EAAEA;AADgB,SAAX,CAAb,CAJmB,CAQnB;;AACAA,QAAAA,IAAI,CAACQ,EAAL,CAAQC,GAAR,CAAYF,MAAZ,EAAoB,WAApB;AACD,OAVD;AAWA,aAAO,YAAM;AACX,YAAIP,IAAJ,EAAU;AACR;AACAA,UAAAA,IAAI,CAACC,SAAL,GAAiB,IAAjB;AACD;AACF,OALD;AAMD,KAhCD;AAiCD,GAnCQ,CAAT;AAqCA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,GAAG,EAAET,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,oBAC0C;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD1C,CADF;AAKD,CA7CM","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { loadModules } from \"esri-loader\";\r\n\r\nexport const Editor = () => {\r\n  const mapRef = useRef();\r\n\r\n  useEffect(() => {\r\n    // lazy load the required ArcGIS API for JavaScript modules and CSS\r\n    loadModules([\"esri/WebMap\", \"esri/views/MapView\", \"esri/widgets/Editor\"], {\r\n      css: true\r\n    }).then(([WebMap, MapView, Editor]) => {\r\n      // Create a map from the referenced webmap item id\r\n      let webmap = new WebMap({\r\n        portalItem: {\r\n          id: \"cf05564a3c4149b09f836329929f7fa0\"\r\n        }\r\n      });\r\n\r\n      let view = new MapView({\r\n        container: mapRef.current,\r\n        map: webmap\r\n      });\r\n\r\n      view.when(function() {\r\n        view.popup.autoOpenEnabled = true; //disable popups\r\n\r\n        // Create the Editor\r\n        let editor = new Editor({\r\n          view: view\r\n        });\r\n\r\n        // Add widget to top-right of the view\r\n        view.ui.add(editor, \"top-right\");\r\n      });\r\n      return () => {\r\n        if (view) {\r\n          // destroy the map view\r\n          view.container = null;\r\n        }\r\n      };\r\n    });\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"webmap\" ref={mapRef} /> <div id=\"editorDiv\" />\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}