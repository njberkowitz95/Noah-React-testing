{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Noah Berkowitz\\\\Documents\\\\Locust1\\\\react-arcgis-map-examples\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Noah Berkowitz\\\\Documents\\\\Locust1\\\\react-arcgis-map-examples\\\\src\\\\maps\\\\Editor.js\";\n\nimport React, { useEffect, useRef } from \"react\";\nimport { loadModules } from \"esri-loader\";\nexport var Editor = function Editor() {\n  var mapRef = useRef();\n  useEffect(function () {\n    // lazy load the required ArcGIS API for JavaScript modules and CSS\n    loadModules([\"esri/WebMap\", \"esri/views/MapView\", \"esri/widgets/Search\", \"esri/widgets/LayerList\", \"esri/widgets/Home\", \"esri/widgets/Home\"], {\n      css: true\n    }).then(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 5),\n          WebMap = _ref2[0],\n          MapView = _ref2[1],\n          Search = _ref2[2],\n          LayerList = _ref2[3],\n          Home = _ref2[4];\n\n      // Create a map from the referenced webmap item id\n      var webmap = new WebMap({\n        portalItem: {\n          id: \"dea7d5d061f048d09d053a65bcc5e15c\"\n        }\n      });\n      var view = new MapView({\n        container: mapRef.current,\n        zoom: 3,\n        center: [78, 22],\n        map: webmap\n      });\n      view.when(function () {\n        view.popup.autoOpenEnabled = true; //disable popups\n        // Create the Editor\n\n        var tor = new Search({\n          view: view\n        }); // Add widget to top-right of the view\n\n        view.ui.add(tor, \"top-right\"); // Create the Editor\n\n        var lod = new LayerList({\n          view: view\n        }); // Add widget to top-right of the view\n\n        view.ui.add(lod, \"bottom-right\"); // Create the Editor\n\n        var rul = new Home({\n          view: view\n        }); // Add widget to top-right of the view\n\n        view.ui.add(rul, \"top-left\");\n      });\n      return function () {\n        if (view) {\n          // destroy the map view\n          view.container = null;\n        }\n      };\n    });\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"webmap\",\n    ref: mapRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"div\", {\n    id: \"editorDiv\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 47\n    }\n  }));\n};","map":{"version":3,"sources":["C:/Users/Noah Berkowitz/Documents/Locust1/react-arcgis-map-examples/src/maps/Editor.js"],"names":["React","useEffect","useRef","loadModules","Editor","mapRef","css","then","WebMap","MapView","Search","LayerList","Home","webmap","portalItem","id","view","container","current","zoom","center","map","when","popup","autoOpenEnabled","tor","ui","add","lod","rul"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAGA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAC1B,MAAMC,MAAM,GAAGH,MAAM,EAArB;AAEAD,EAAAA,SAAS,CAAC,YAAM;AACd;AACAE,IAAAA,WAAW,CAAC,CAAC,aAAD,EAAgB,oBAAhB,EAAsC,qBAAtC,EAA6D,wBAA7D,EAAuF,mBAAvF,EAA4G,mBAA5G,CAAD,EAAmI;AAC5IG,MAAAA,GAAG,EAAE;AADuI,KAAnI,CAAX,CAEGC,IAFH,CAEQ,gBAAgD;AAAA;AAAA,UAA9CC,MAA8C;AAAA,UAAtCC,OAAsC;AAAA,UAA7BC,MAA6B;AAAA,UAArBC,SAAqB;AAAA,UAAVC,IAAU;;AACtD;AACA,UAAIC,MAAM,GAAG,IAAIL,MAAJ,CAAW;AACtBM,QAAAA,UAAU,EAAE;AACVC,UAAAA,EAAE,EAAE;AADM;AADU,OAAX,CAAb;AAMA,UAAIC,IAAI,GAAG,IAAIP,OAAJ,CAAY;AACrBQ,QAAAA,SAAS,EAAEZ,MAAM,CAACa,OADG;AAErBC,QAAAA,IAAI,EAAE,CAFe;AAGrBC,QAAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAHa;AAIrBC,QAAAA,GAAG,EAAER;AAJgB,OAAZ,CAAX;AAOAG,MAAAA,IAAI,CAACM,IAAL,CAAU,YAAW;AACnBN,QAAAA,IAAI,CAACO,KAAL,CAAWC,eAAX,GAA6B,IAA7B,CADmB,CACgB;AAEnC;;AACA,YAAIC,GAAG,GAAG,IAAIf,MAAJ,CAAW;AACnBM,UAAAA,IAAI,EAAEA;AADa,SAAX,CAAV,CAJmB,CAQnB;;AACAA,QAAAA,IAAI,CAACU,EAAL,CAAQC,GAAR,CAAYF,GAAZ,EAAiB,WAAjB,EATmB,CAWnB;;AACA,YAAIG,GAAG,GAAG,IAAIjB,SAAJ,CAAc;AACxBK,UAAAA,IAAI,EAAEA;AADkB,SAAd,CAAV,CAZmB,CAgBnB;;AACAA,QAAAA,IAAI,CAACU,EAAL,CAAQC,GAAR,CAAYC,GAAZ,EAAiB,cAAjB,EAjBmB,CAmBnB;;AACA,YAAIC,GAAG,GAAG,IAAIjB,IAAJ,CAAS;AACnBI,UAAAA,IAAI,EAAEA;AADa,SAAT,CAAV,CApBmB,CAwBnB;;AACAA,QAAAA,IAAI,CAACU,EAAL,CAAQC,GAAR,CAAYE,GAAZ,EAAiB,UAAjB;AAGD,OA5BD;AA6BA,aAAO,YAAM;AACX,YAAIb,IAAJ,EAAU;AACR;AACAA,UAAAA,IAAI,CAACC,SAAL,GAAiB,IAAjB;AACD;AACF,OALD;AAMD,KApDD;AAqDD,GAvDQ,CAAT;AAyDA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,GAAG,EAAEZ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,oBAC0C;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD1C,CADF;AAKD,CAjEM","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { loadModules } from \"esri-loader\";\r\n\r\n\r\nexport const Editor = () => {\r\n  const mapRef = useRef();\r\n\r\n  useEffect(() => {\r\n    // lazy load the required ArcGIS API for JavaScript modules and CSS\r\n    loadModules([\"esri/WebMap\", \"esri/views/MapView\", \"esri/widgets/Search\", \"esri/widgets/LayerList\", \"esri/widgets/Home\", \"esri/widgets/Home\"], {\r\n      css: true\r\n    }).then(([WebMap, MapView, Search, LayerList, Home]) => {\r\n      // Create a map from the referenced webmap item id\r\n      let webmap = new WebMap({\r\n        portalItem: {\r\n          id: \"dea7d5d061f048d09d053a65bcc5e15c\"\r\n        }\r\n      });\r\n\r\n      let view = new MapView({\r\n        container: mapRef.current,\r\n        zoom: 3,\r\n        center: [78, 22],\r\n        map: webmap\r\n      });\r\n\r\n      view.when(function() {\r\n        view.popup.autoOpenEnabled = true; //disable popups\r\n\r\n        // Create the Editor\r\n        let tor = new Search({\r\n          view: view\r\n        }); \r\n\r\n        // Add widget to top-right of the view\r\n        view.ui.add(tor, \"top-right\");\r\n\r\n        // Create the Editor\r\n        let lod = new LayerList({\r\n        view: view\r\n        });\r\n\r\n        // Add widget to top-right of the view\r\n        view.ui.add(lod, \"bottom-right\");\r\n\r\n        // Create the Editor\r\n        let rul = new Home({\r\n        view: view\r\n        });\r\n    \r\n        // Add widget to top-right of the view\r\n        view.ui.add(rul, \"top-left\");\r\n\r\n\r\n      });\r\n      return () => {\r\n        if (view) {\r\n          // destroy the map view\r\n          view.container = null;\r\n        }\r\n      };\r\n    });\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"webmap\" ref={mapRef} /> <div id=\"editorDiv\" />\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}