{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Noah Berkowitz\\\\Downloads\\\\react-arcgis-map-examples\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Noah Berkowitz\\\\Downloads\\\\react-arcgis-map-examples\\\\src\\\\maps\\\\COVID19.js\";\n\nimport React, { useEffect, useRef } from \"react\";\nimport { loadModules } from \"esri-loader\";\nexport var Covid19 = function Covid19() {\n  var mapRef = useRef();\n  useEffect(function () {\n    // lazy load the required ArcGIS API for JavaScript modules and CSS\n    loadModules([\"esri/Map\", \"esri/views/SceneView\", \"esri/layers/FeatureLayer\"], {\n      css: true\n    }).then(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 3),\n          ArcGISMap = _ref2[0],\n          SceneView = _ref2[1],\n          FeatureLayer = _ref2[2];\n\n      var countries = new FeatureLayer({\n        url: \"https://services.arcgis.com/P3ePLMYs2RVChkJx/arcgis/rest/services/World_Countries_(Generalized)/FeatureServer\",\n        renderer: {\n          type: \"simple\",\n          symbol: {\n            type: \"polygon-3d\",\n            // autocasts as new PolygonSymbol3D()\n            symbolLayers: [{\n              type: \"fill\",\n              // autocasts as new FillSymbol3DLayer()\n              material: {\n                color: [0, 0, 0, 0]\n              },\n              outline: {\n                color: [4, 245, 248]\n              }\n            }]\n          }\n        }\n      });\n      var map = new ArcGISMap({\n        layers: [countries],\n        ground: {\n          opacity: 0.5,\n          surfaceColor: \"black\"\n        }\n      }); // load the map view at the ref's DOM node\n\n      var view = new SceneView({\n        container: mapRef.current,\n        map: map,\n        environment: {\n          starsEnabled: false,\n          atmosphereEnabled: false,\n          background: {\n            type: \"color\",\n            color: \"black\"\n          }\n        },\n        center: [78, 22],\n        zoom: 3\n      });\n      return function () {\n        if (view) {\n          // destroy the map view\n          view.container = null;\n        }\n      };\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"webmap\",\n    ref: mapRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 10\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/Noah Berkowitz/Downloads/react-arcgis-map-examples/src/maps/COVID19.js"],"names":["React","useEffect","useRef","loadModules","Covid19","mapRef","css","then","ArcGISMap","SceneView","FeatureLayer","countries","url","renderer","type","symbol","symbolLayers","material","color","outline","map","layers","ground","opacity","surfaceColor","view","container","current","environment","starsEnabled","atmosphereEnabled","background","center","zoom"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC3B,MAAMC,MAAM,GAAGH,MAAM,EAArB;AAEAD,EAAAA,SAAS,CAAC,YAAM;AACd;AACAE,IAAAA,WAAW,CACT,CAAC,UAAD,EAAa,sBAAb,EAAqC,0BAArC,CADS,EAET;AACEG,MAAAA,GAAG,EAAE;AADP,KAFS,CAAX,CAKEC,IALF,CAKO,gBAA0C;AAAA;AAAA,UAAxCC,SAAwC;AAAA,UAA7BC,SAA6B;AAAA,UAAlBC,YAAkB;;AAC/C,UAAMC,SAAS,GAAG,IAAID,YAAJ,CAAiB;AACjCE,QAAAA,GAAG,EACD,+GAF+B;AAGjCC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,IAAI,EAAE,QADE;AAERC,UAAAA,MAAM,EAAE;AACND,YAAAA,IAAI,EAAE,YADA;AACc;AACpBE,YAAAA,YAAY,EAAE,CACZ;AACEF,cAAAA,IAAI,EAAE,MADR;AACgB;AACdG,cAAAA,QAAQ,EAAE;AACRC,gBAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV;AADC,eAFZ;AAKEC,cAAAA,OAAO,EAAE;AACPD,gBAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT;AADA;AALX,aADY;AAFR;AAFA;AAHuB,OAAjB,CAAlB;AAqBA,UAAME,GAAG,GAAG,IAAIZ,SAAJ,CAAc;AACxBa,QAAAA,MAAM,EAAE,CAACV,SAAD,CADgB;AAExBW,QAAAA,MAAM,EAAE;AACNC,UAAAA,OAAO,EAAE,GADH;AAENC,UAAAA,YAAY,EAAE;AAFR;AAFgB,OAAd,CAAZ,CAtB+C,CA8B/C;;AACA,UAAMC,IAAI,GAAG,IAAIhB,SAAJ,CAAc;AACzBiB,QAAAA,SAAS,EAAErB,MAAM,CAACsB,OADO;AAEzBP,QAAAA,GAAG,EAAEA,GAFoB;AAGzBQ,QAAAA,WAAW,EAAE;AACXC,UAAAA,YAAY,EAAE,KADH;AAEXC,UAAAA,iBAAiB,EAAE,KAFR;AAGXC,UAAAA,UAAU,EAAE;AACVjB,YAAAA,IAAI,EAAE,OADI;AAEVI,YAAAA,KAAK,EAAE;AAFG;AAHD,SAHY;AAWzBc,QAAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAXiB;AAYzBC,QAAAA,IAAI,EAAE;AAZmB,OAAd,CAAb;AAeA,aAAO,YAAM;AACX,YAAIR,IAAJ,EAAU;AACR;AACAA,UAAAA,IAAI,CAACC,SAAL,GAAiB,IAAjB;AACD;AACF,OALD;AAMD,KAzDD;AA0DD,GA5DQ,CAAT;AA8DA,sBAAO;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,GAAG,EAAErB,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAlEM","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { loadModules } from \"esri-loader\";\r\n\r\nexport const Covid19 = () => {\r\n  const mapRef = useRef();\r\n\r\n  useEffect(() => {\r\n    // lazy load the required ArcGIS API for JavaScript modules and CSS\r\n    loadModules(\r\n      [\"esri/Map\", \"esri/views/SceneView\", \"esri/layers/FeatureLayer\"],\r\n      {\r\n        css: true\r\n      }\r\n    ).then(([ArcGISMap, SceneView, FeatureLayer]) => {\r\n      const countries = new FeatureLayer({\r\n        url:\r\n          \"https://services.arcgis.com/P3ePLMYs2RVChkJx/arcgis/rest/services/World_Countries_(Generalized)/FeatureServer\",\r\n        renderer: {\r\n          type: \"simple\",\r\n          symbol: {\r\n            type: \"polygon-3d\", // autocasts as new PolygonSymbol3D()\r\n            symbolLayers: [\r\n              {\r\n                type: \"fill\", // autocasts as new FillSymbol3DLayer()\r\n                material: {\r\n                  color: [0, 0, 0, 0]\r\n                },\r\n                outline: {\r\n                  color: [4, 245, 248]\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        }\r\n      });\r\n      const map = new ArcGISMap({\r\n        layers: [countries],\r\n        ground: {\r\n          opacity: 0.5,\r\n          surfaceColor: \"black\"\r\n        }\r\n      });\r\n\r\n      // load the map view at the ref's DOM node\r\n      const view = new SceneView({\r\n        container: mapRef.current,\r\n        map: map,\r\n        environment: {\r\n          starsEnabled: false,\r\n          atmosphereEnabled: false,\r\n          background: {\r\n            type: \"color\",\r\n            color: \"black\"\r\n          }\r\n        },\r\n        center: [78, 22],\r\n        zoom: 3\r\n      });\r\n\r\n      return () => {\r\n        if (view) {\r\n          // destroy the map view\r\n          view.container = null;\r\n        }\r\n      };\r\n    });\r\n  });\r\n\r\n  return <div className=\"webmap\" ref={mapRef} />;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}